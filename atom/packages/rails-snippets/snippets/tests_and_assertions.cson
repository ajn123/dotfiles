'.source.ruby, .source.ruby.rails':
  'it':
    'prefix': 'it'
    'body': """
      it "$1" do
        $2
      end
    """

  'describe':
    'prefix': 'describe'
    'body': """
      describe "when $1" do
        $2
      end
    """

  'context':
    'prefix': 'context'
    'body': """
      context "when $1" do
        $2
      end
    """

  'test case':
    'prefix': 'test'
    'body': """
      test "when ${1:method_or_case}" do
        ${2:assert true}
      end
    """

  'assert':
    'prefix': 'ast'
    'body': 'assert ${1:true}${2:, "${3:expected ${1:true} to be true}"}'

  'assert_not':
    'prefix': 'astn'
    'body': 'assert_not ${1:false}'

  'assert_equal':
    'prefix': 'ase'
    'body': 'assert_equal ${1:expected}, ${2:actual}${3:, "${4:expected}"}'

  'assert_in_delta':
    'prefix': 'asde'
    'description': 'assert_in_delta(expected_float, actual_float, delta, message="")'
    'body': 'assert_in_delta ${1:expected_float}, ${2:actual_float}, ${3:delta}, "${4:float didn\'t matched}"$0'

  'assert_difference':
    'prefix': 'asd'
    'description': 'assert_difference(expression, difference = 1, message = nil, &block)'
    'body': """
      assert_difference("${1:User.count}") do
        $2
      end
    """

  'assert_no_difference':
    'prefix': 'asnd'
    'description': 'assert_no_difference(expression, message = nil, &block)'
    'body': """
      assert_no_difference("${1:User.count}") do
        $2
      end
    """

  'assert_response':
    'prefix': 'asre'
    'body': 'assert_response :${1:success}'

  'assert_redirected_to':
    'prefix': 'asr'
    'body': 'assert_redirected_to ${1:users}_path$0'
