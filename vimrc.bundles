if &compatible
  set nocompatible
end

set rtp+=~/.vim/bundle/Vundle.vim/
call vundle#begin()

" Let Vundle manage Vundle
Plugin 'gmarik/Vundle.vim'

" Define bundles via Github repos
Plugin 'christoomey/vim-run-interactive'
Plugin 'croaky/vim-colors-github'
Plugin 'kchmck/vim-coffee-script'
Plugin 'junegunn/fzf'
Plugin 'junegunn/fzf.vim'
Plugin 'pbrisbin/vim-mkdir'
" Replacing sytastic with ale
"Plugin 'scrooloose/syntastic'
Plugin 'w0rp/ale'
Plugin 'slim-template/vim-slim'
Plugin 'thoughtbot/vim-rspec'
Plugin 'tpope/vim-bundler'
Plugin 'tpope/vim-endwise'
Plugin 'tpope/vim-eunuch'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-rails'
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-surround'
Plugin 'vim-ruby/vim-ruby'
Plugin 'vim-scripts/ctags.vim'
Plugin 'vim-scripts/matchit.zip'
Plugin 'vim-scripts/tComment'
" for molokai dark theme
" Plugin 'pR0Ps/molokai-dark'

Plugin 'mattn/webapi-vim'
Plugin 'mattn/gist-vim'  " For gists
Plugin 'Raimondi/delimitMate'
Bundle 'Rip-Rip/clang_complete'
Plugin 'bling/vim-airline'
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
Plugin 'garbas/vim-snipmate'
Plugin 'honza/vim-snippets'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'mattn/emmet-vim'
Plugin 'rizzatti/dash.vim'
Plugin 'morhetz/gruvbox'

"  Bundle 'Valloric/YouCompleteMe'

if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

call vundle#end()
filetype plugin indent on    " required
colorscheme gruvbox
"For Vim solarized
syntax enable
""let g:solarized_termcolors=256
"set background=dark
""colorscheme solarized
"#############################


autocmd FileType ruby,eruby let g:rubycomplete_buffer_loading = 1 
autocmd FileType ruby,eruby let g:rubycomplete_classes_in_global = 1
autocmd FileType ruby,eruby let g:rubycomplete_rails = 1

" for vim-airline tabline
let g:airline#extensions#tabline#enabled = 1


" For vim-multiple-cursors
let g:multi_cursor_quit_key            = '<C-s>'
let g:multi_cursor_quit_key            = '<C-s>'
let g:multi_cursor_exit_from_visual_mode = 1
let g:multi_cursor_exit_from_insert_mode = 1



" Mapping Fzf to Ctrl-P
nnoremap <silent> <C-P> :Files<CR>


" ale only lint on saves
let g:ale_lint_on_text_changed = 'never'





